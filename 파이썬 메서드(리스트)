#파이썬 메서드
1. 리스트
----
list.append(x) 
리스트 끝에 항목을 더합니다. a[len(a):] = [x]와 동등합니다. 

list.extend(iterable) 
리스트 끝에 이터러블의 모든 항목을 덧붙여서 확장합니다.
a[len(a):] = iterable와 동등합니다.

list.insert(i,x)
주어진 위치에 항목을 삽입합니다. 첫 번째 인자는 삽입되는 요소가 갖게 될 인덱스입니다.
그래서 a.insert(0,x)는 리스트의 처음에 삽입하고, a.insert(len(a),x)는 a.append(x)와 동등합니다.

list.remove(x)
리스트에서 값이 x와 같은 첫 번째 항목을 삭제합니다. 그런 항목이 없으면 ValueError를 일으킵니다.

list.pop([i])
리스트에서 주어진 포지션의 아이템을 삭제하고 그것을 돌려줍니다. 만약에 인덱스가 지정되지 않았으면, a.pop()은 제거하고 리스트에서 마지막 아이템을 리턴합니다.

list.clear()
리스트의 모든 항목을 삭제합니다. del a[:]와 동등합니다.

list.index(x[, start[,end]])
리스트에 있는 항목 중 값이 x와 같은 첫 번째 것의 0부터 시작하는 인덱스를 돌려줍니다. 그런 항목이 없으면 ValueError를 일으킵니다.
선택적인 인자 start와 end는 슬라이스 표기법처럼 해석되고, 검색을 리스트의 특별한 서브 시퀀스로 제한하는 데 사용됩니다.
돌려주는 인덱스는 start인자가 아니라 전체 시퀀스의 시작을 기준으로 합니다.

list.count(x)
리스트에서 x가 등장하는 횟수를 돌려줍니다.

list.sort(*,key=None, reverse=False)
리스트의 항목들을 제자리에서 정렬합니다.

list.reverse()
리스트의 요소들을 제자리에서 뒤집습니다.

list.copy()
리스트의 얕은 사본을 돌려줍니다. a[:]와 동등합니다.

#리스트 메서드 예
fruits = ['orange', 'apple', 'pear', 'banana', 'kiwi', 'apple', 'banana']

fruits.count('apple')
2
fruits.count('tangerine')
0
fruits.index('banana')
3
fruits.index('banana', 4)  # Find next banana starting at position 4
6

fruits.reverse()
fruits
['banana', 'apple', 'kiwi', 'banana', 'pear', 'apple', 'orange']

fruits.append('grape')
fruits
['banana', 'apple', 'kiwi', 'banana', 'pear', 'apple', 'orange', 'grape']

fruits.sort()
fruits
['apple', 'apple', 'banana', 'banana', 'grape', 'kiwi', 'orange', 'pear']

fruits.pop()
'pear'
